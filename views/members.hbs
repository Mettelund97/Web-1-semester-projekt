<section class="content">
  <nav aria-label="Breadcrumb">
    <ol class="breadcrumb">
      <li aria-current="page">Members</li>
    </ol>
  </nav>
  <section class="my-projects">
    <div class="sectionhead">
      <h2>Members</h2>
      <div class="line"></div>
    </div>
    <div class="parent-container">
      <div class="actionsrow">
        <div class="search-filter-wrapper">
          <div class="searchBar">
            <input type="text" placeholder="Search.." />
          </div>
          <div>
            <button class="setting-btn dark light">
              <span class="bar bar1 dark light"></span>
              <span class="bar bar2 dark light"></span>
              <span class="bar bar1 dark light"></span>
            </button>
          </div>
        </div>
        <div class="toggle-container2">
          <input type="checkbox" id="toggle2" class="toggle-input2" />
          <label for="toggle2" class="toggle-label2">
            <img src="/images/editiconblack.svg" alt="Edit Icon" class="toggle-icon2 iconlight" />
            <img src="/images/editicon.svg" alt="Edit Icon" class="toggle-icon2 icondarkmode" />
          </label>
        </div>
      </div>
    </div>

    <div>
      <div class="container-btn">
        <a href="/add-new-member" class="button-link">
          <img src="/images/plusikon.svg" alt="Icon" class="buttonikon iconlight" />
          Add member
        </a>
      </div>
    </div>

    <div class="members-grid">
      <!-- Grid Header -->
      <div class="members-grid-header">
        <div class="grid-col">
          <h3>Name</h3>
        </div>
        <div class="grid-col">
          <h3>Email</h3>
        </div>
        <div class="grid-col">
          <h3>Role</h3>
        </div>
        <div class="grid-col">
          <h3>Status</h3>
        </div>
        <div class="grid-col">
          <h3>Action</h3>
        </div>
      </div>
    
      <!-- Grid Body -->
      {{#each users}}
      <div class="members-grid-row">
        <div class="grid-col">
          <div class="name-cell">
            <div class="emptybox"></div>
            <p>{{this.firstName}} {{this.lastName}}</p>
          </div>
        </div>
        <div class="grid-col">
          <p>{{this.email}}</p>
        </div>
        <div class="grid-col role-cell">
          <div class="role-stack">
            <div id="role-display-{{this.id}}" class="role-display-element">
              <span>{{this.roleName}}</span>
              <button class="edit-role-btn" onclick="showRoleEdit('{{this.id}}')">
                <img src="/images/editiconblack.svg" alt="Edit" class="ikon2 iconlight" />
                <img src="/images/editicon.svg" alt="Edit" class="ikon2 icondarkmode" />
              </button>
            </div>
            <div id="role-edit-{{this.id}}" class="role-edit" style="display: none;">
              <select id="role-select-{{this.id}}" onchange="handleRoleChange('{{this.id}}', '{{this.RoleId}}')">
                {{#each ../roles}}
                <option value="{{this.id}}" {{#if (eq this.id ../RoleId)}}selected{{/if}}>
                  {{this.type}}
                </option>
                {{/each}}
              </select>
              <div id="button-group-{{this.id}}" class="button-group" style="display: none;">
                <button onclick="updateRole('{{this.id}}')" class="confirm-btn">Confirm</button>
                <button onclick="cancelEdit('{{this.id}}')" class="cancel-btn">Cancel</button>
              </div>
            </div>
          </div>
        </div>
        <div class="grid-col">
          <div class="statusrow">
            <img src="/images/greenstatus.svg" alt="Icon" class="ikon2" />
            <p class="statusp">ONLINE</p>
          </div>
        </div>
        <div class="grid-col">
          <div class="actiontablecell">
            <img src="/images/playikon.svg" alt="Icon" class="ikon2 iconlight" />
            <img src="/images/playiconwhite.svg" alt="Icon" class="ikon2 icondarkmode" />
          </div>
        </div>
      </div>
      {{/each}}
    </div>
  </section>
</section>
{{!-- Add this at the bottom of your members.hbs, before the closing </section> tag --}}



<script>
// Role editing functions
function showRoleEdit(userId) {
    const displayElement = document.getElementById(`role-display-${userId}`);
    const editElement = document.getElementById(`role-edit-${userId}`);
    const buttonGroup = document.getElementById(`button-group-${userId}`);
    
    if (displayElement && editElement) {
        displayElement.style.display = 'none';
        editElement.style.display = 'flex';
        // Hide buttons initially
        if (buttonGroup) {
            buttonGroup.style.display = 'none';
        }
    }
}

function handleRoleChange(userId, currentRoleId) {
    const select = document.getElementById(`role-select-${userId}`);
    const buttonGroup = document.getElementById(`button-group-${userId}`);
    
    // Only show buttons if selected role is different from current role
    if (buttonGroup) {
        buttonGroup.style.display = select.value !== currentRoleId ? 'flex' : 'none';
    }
}

function cancelEdit(userId) {
    const displayElement = document.getElementById(`role-display-${userId}`);
    const editElement = document.getElementById(`role-edit-${userId}`);
    const select = document.getElementById(`role-select-${userId}`);
    const buttonGroup = document.getElementById(`button-group-${userId}`);
    
    if (displayElement && editElement) {
        displayElement.style.display = 'flex';
        editElement.style.display = 'none';
        // Reset select to original value
        if (select) {
            select.value = currentRoleId;
        }
        // Hide buttons
        if (buttonGroup) {
            buttonGroup.style.display = 'none';
        }
    }
}

function updateRole(userId) {
    const select = document.getElementById(`role-select-${userId}`);
    const newRoleId = select.value;

    fetch(`/user/${userId}/role`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ roleId: newRoleId })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert('Error updating role: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error updating role');
    });
}
</script>